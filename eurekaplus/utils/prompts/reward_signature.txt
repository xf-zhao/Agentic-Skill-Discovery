def is_object_out_of_table(
    env: RLTaskEnv, minimum_height: float,
) -> torch.Tensor:
    """Terminate when the asset's height is below the minimum height.

    Note:
        This is currently only supported for flat terrains, i.e. the minimum height is in the world frame.
    """
    obs = env.obs_buf["observations"]
    asset_height = obs['plate_position'][:, 2] # x, y, z (height)
    return asset_height < minimum_height


@configclass
class RewardsCfg:
    # The first reward component to avoid falling object
    dropping_plate = RewTerm(
        func=is_object_out_of_table,
        params={"minimum_height": -0.05}, # Table plane as z = 0
        weight=-10.0, # Negative reward weight for penalizing the falling of an object
    )

    # It is encouraged to have more reward components. (They should be with distinguish names)